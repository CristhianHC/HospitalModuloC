<?php

/**
 * This is the model base class for the table "archivo.signos_vitales_medicinales_f08".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SignosVitalesMedicinalesF08".
 *
 * Columns in table "archivo.signos_vitales_medicinales_f08" available as properties of the model,
 * followed by relations of table "archivo.signos_vitales_medicinales_f08" available as properties of the model.
 *
 * @property integer $id_sivimi
 * @property string $presion_arterial
 * @property double $frecuencia_cardiaca
 * @property double $frecuencia_respiratoria
 * @property double $temperatura_bucal
 * @property double $temperatura_axilar
 * @property double $peso_kg
 * @property double $talla_metro
 * @property integer $ocular_glasgow
 * @property integer $verbal_glasgow
 * @property integer $motora_glasgow
 * @property integer $total_glasgow
 * @property string $reaccion_pupila_derecha
 * @property string $reaccion_pupila_izquierda
 * @property string $total_llenado_capilar
 * @property string $satura_oxigeno
 *
 * @property Ficha08[] $ficha08s
 */
abstract class BaseSignosVitalesMedicinalesF08 extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'archivo.signos_vitales_medicinales_f08';
    }

    public static function representingColumn() {
        return 'presion_arterial';
    }

    public function rules() {
        return array(
            array('ocular_glasgow, verbal_glasgow, motora_glasgow, total_glasgow', 'numerical', 'integerOnly'=>true),
            array('frecuencia_cardiaca, frecuencia_respiratoria, temperatura_bucal, temperatura_axilar, peso_kg, talla_metro', 'numerical'),
            array('presion_arterial, reaccion_pupila_derecha, reaccion_pupila_izquierda, total_llenado_capilar, satura_oxigeno', 'safe'),
            array('presion_arterial, frecuencia_cardiaca, frecuencia_respiratoria, temperatura_bucal, temperatura_axilar, peso_kg, talla_metro, ocular_glasgow, verbal_glasgow, motora_glasgow, total_glasgow, reaccion_pupila_derecha, reaccion_pupila_izquierda, total_llenado_capilar, satura_oxigeno', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id_sivimi, presion_arterial, frecuencia_cardiaca, frecuencia_respiratoria, temperatura_bucal, temperatura_axilar, peso_kg, talla_metro, ocular_glasgow, verbal_glasgow, motora_glasgow, total_glasgow, reaccion_pupila_derecha, reaccion_pupila_izquierda, total_llenado_capilar, satura_oxigeno', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'ficha08s' => array(self::HAS_MANY, 'Ficha08', 'id_sivimi_f08'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id_sivimi' => Yii::t('app', 'Id Sivimi'),
                'presion_arterial' => Yii::t('app', 'Presion Arterial'),
                'frecuencia_cardiaca' => Yii::t('app', 'Frecuencia Cardiaca'),
                'frecuencia_respiratoria' => Yii::t('app', 'Frecuencia Respiratoria'),
                'temperatura_bucal' => Yii::t('app', 'Temperatura Bucal'),
                'temperatura_axilar' => Yii::t('app', 'Temperatura Axilar'),
                'peso_kg' => Yii::t('app', 'Peso Kg'),
                'talla_metro' => Yii::t('app', 'Talla Metro'),
                'ocular_glasgow' => Yii::t('app', 'Ocular Glasgow'),
                'verbal_glasgow' => Yii::t('app', 'Verbal Glasgow'),
                'motora_glasgow' => Yii::t('app', 'Motora Glasgow'),
                'total_glasgow' => Yii::t('app', 'Total Glasgow'),
                'reaccion_pupila_derecha' => Yii::t('app', 'Reaccion Pupila Derecha'),
                'reaccion_pupila_izquierda' => Yii::t('app', 'Reaccion Pupila Izquierda'),
                'total_llenado_capilar' => Yii::t('app', 'Total Llenado Capilar'),
                'satura_oxigeno' => Yii::t('app', 'Satura Oxigeno'),
                'ficha08s' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id_sivimi', $this->id_sivimi);
        $criteria->compare('presion_arterial', $this->presion_arterial, true);
        $criteria->compare('frecuencia_cardiaca', $this->frecuencia_cardiaca);
        $criteria->compare('frecuencia_respiratoria', $this->frecuencia_respiratoria);
        $criteria->compare('temperatura_bucal', $this->temperatura_bucal);
        $criteria->compare('temperatura_axilar', $this->temperatura_axilar);
        $criteria->compare('peso_kg', $this->peso_kg);
        $criteria->compare('talla_metro', $this->talla_metro);
        $criteria->compare('ocular_glasgow', $this->ocular_glasgow);
        $criteria->compare('verbal_glasgow', $this->verbal_glasgow);
        $criteria->compare('motora_glasgow', $this->motora_glasgow);
        $criteria->compare('total_glasgow', $this->total_glasgow);
        $criteria->compare('reaccion_pupila_derecha', $this->reaccion_pupila_derecha, true);
        $criteria->compare('reaccion_pupila_izquierda', $this->reaccion_pupila_izquierda, true);
        $criteria->compare('total_llenado_capilar', $this->total_llenado_capilar, true);
        $criteria->compare('satura_oxigeno', $this->satura_oxigeno, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
            'ActiveRecordRelation' => array(
                'class' => 'EActiveRecordRelationBehavior',
            ),
        ), parent::behaviors());
    }
}